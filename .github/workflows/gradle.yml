name: CI
on:
  push:
    branches: [ "main" ]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Start MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mysql version: '8.0'
        mysql database: 'comm'
        mysql root password: 1234

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      env:
        MYSQL_URL: jdbc:mysql://localhost:3306/comm
        MYSQL_PASSWORD: 1234
        MYSQL_USERNAME: root
      run: |
          gradle wrapper
          ./gradlew :bulletin:build
          ./gradlew :chatting:build
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          bulletin/build/libs/*.jar
          chatting/build/libs/*.jar
    
    - name: Stop MySQL
      if: always()
      run: docker stop mysql || true

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build-jar
    steps:
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        
    - name: Build Docker image of bulletin
      working-directory: bulletin
      run: ls
    
    - name: Build Docker image of bulletin
      working-directory: bulletin
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dms-bulletin:latest .

    - name: Build Docker image of chatting
      working-directory: chatting
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dms-chatting:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/dms-bulletin:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/dms-chatting:latest
